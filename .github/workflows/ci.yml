name: Build, Test and Deploy Microservices
on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_COMPOSE_VERSION: '3.9'
  DOCKER_BUILDKIT: '1'
  NODE_VERSION: '18'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies and build frontends
        run: |
          SERVICES=(
            "shell"
            "organizationService"
         
          )
          
          for SERVICE in "${SERVICES[@]}"; do
            if [ -f "$SERVICE/package.json" ]; then
              echo "🏗️ Building $SERVICE..."
              cd "$SERVICE"
              npm ci
              npm run build
              cd ..
              echo "✅ $SERVICE built successfully"
            fi
          done

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          task build
          if [ "$GITHUB_REF" == "refs/heads/main" ]; then
            task push
          fi

      - name: Run unit tests
        run: |
          echo "🧪 Running unit tests..."
          for SERVICE in */; do
            if [ -f "$SERVICE/package.json" ]; then
              echo "Testing $SERVICE..."
              cd "$SERVICE"
              npm test
              cd ..
            fi
          done

      - name: Integration tests
        run: |
          docker compose -f saas-frontend up -d --build
          
          echo "⏳ Waiting for services to start..."
          for i in {1..10}; do
            if docker ps | grep -q "fe-shell-service" && \
               curl -s http://localhost:5000/api/health | jq -e '.status == "ok"' >/dev/null; then
              echo "🚀 Services are up!"
              break
            fi
            sleep 5
          done
          
          # Add your integration test commands here
          curl -s http://localhost:5000/api/health | jq -e '.status == "ok"' || exit 1

      - name: Clean up
        if: always()
        run: |
          docker compose -f saas-frontend down -v --remove-orphans
          docker system prune -af

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./shell/dist 
          force_orphan: true
